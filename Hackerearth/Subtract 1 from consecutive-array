Suppose we have a sequence of non-negative integers, Namely a_1, a_2, ... ,a_n. At each time we can choose one term a_i with 0 < i < n and we subtract 1 from both a_i and a_i+1. We wonder whether we can get a sequence of all zeros after several operations.

Input

The first line of test case is a number N. (0 < N <= 10000) The next line is N non-negative integers, 0 <= a_i <= 109

Output

If it can be modified into all zeros with several operations output “YES” in a single line, otherwise output “NO” instead.
#include <iostream>

using namespace std;

int main() {
	long int num;
	cin >> num;	
		
	int flag = 0;								// Reading input from STDIN
	long long arr[num];
	for(int i=0;i<num;i++){
		cin>>arr[i];
	}
	if(num==1 && arr[0]!=0){
		cout<<"NO"<<endl;
	}
	if(num==1 && arr[0]==0){
		cout<<"YES"<<endl;
	}
	
	for(int i=0;i<num-1;i++){
		
		if(arr[i]<=arr[i+1]){
			arr[i+1]= arr[i+1] - arr[i];
			arr[i]=0;
		
			}
		else{
			cout<<"NO"<<endl;
			flag=1;
			break;
		}
		if(arr[num-2]==0 && arr[num-1]!=0){
			cout<<"NO"<<endl;
			flag=1;
			break;
		}
		

	}
