Example 1:

Input: 
head: 0->1->2->3
G = [0, 1, 3]
Output: 2
Explanation: 
0 and 1 are connected, so [0, 1] and [3] are the two connected components.
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    int numComponents(ListNode* head, vector<int>& G) {
        ListNode* ptr = head;
        int flag1,flag2;
        int val1,val2,count=0;
        while(ptr->next!=NULL){
            val1=ptr->val;
            val2 = ptr->next->val;
            flag1=0, flag2=0;
            for(int i=0;i<G.size();i++){
                if(G[i] == val1){
                    flag1=1;
                }
                if(G[i] == val2){
                    flag2=1;
                }
                if(flag1==1 && flag2==1)
                    break;
                }
            if(flag1==1 && flag2==1){
                    count++;
                }
            ptr = ptr->next;
            
        }
        return count + (G.size() - 2*count);
    }
};
